version: "3.9"

services:
  db:
    container_name: db
    image: postgres:17.0-alpine
    volumes:
      - data:/var/lib/postgresql/data
    env_file:
      - ../.env
    ports:
      - "5432:5432"
    networks:
      - backend-network
    restart: always

  forum_app:
    container_name: forum_app
    build:
      context: ./..
      dockerfile: docker/python/Dockerfile
    volumes:
      - ..:/code
    env_file:
      - ../.env
    command: /start-web.sh
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    networks:
      - backend-network
    restart: always

  flower:
    hostname: flower
    build:
      context: ./..
      dockerfile: docker/python/Dockerfile
    command: celery -A forum.celery.app flower
    volumes:
      - ..:/code
    env_file:
      - ../.env
    depends_on:
      - forum_app
      - redis
    ports:
      - "5555:5555"
    networks:
      - backend-network
    restart: always

  worker:
    container_name: worker_1
    hostname: worker
    build:
      context: ./..
      dockerfile: docker/python/Dockerfile
    command: celery -A forum.celery.app worker --loglevel=info
    volumes:
      - ..:/code
    env_file:
      - ../.env
    depends_on:
      - forum_app
      - redis
    networks:
      - backend-network
    restart: always

  redis:
    container_name: redis
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    networks:
      - backend-network
    restart: always

  redis_channels:
    image: redis:7.2.4-alpine
    container_name: redis_channels
    ports:
      - "6380:6379"
    networks:
      - backend-network
    restart: always

  mongodb:
    image: mongo:6-jammy
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - data:/data/db
    networks:
      - backend-network
    restart: always

volumes:
  data:

networks:
  backend-network:
